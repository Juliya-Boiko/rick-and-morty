{"version":3,"file":"static/js/679.06a39121.chunk.js","mappings":"mNAIAA,EAAAA,EAAAA,SAAAA,QAFiB,kCAIV,IAAMC,EAAqB,mCAAG,2FAC7BC,EAAOF,EAAAA,EAAAA,IAAA,cADsB,kBAE5BE,GAF4B,2CAAH,qDAKrBC,EAAuB,mCAAG,WAAOC,GAAP,8EAC/BF,EAAOF,EAAAA,EAAAA,IAAA,qBAAwBI,IADA,kBAE9BF,GAF8B,2CAAH,qD,+JCRvBG,EAAW,WACtB,OACE,UAAC,KAAD,CAASC,GAAG,IAAIC,UAAU,YAA1B,WACE,SAAC,MAAD,CAAoBC,KAAK,QACzB,iBAAMD,UAAU,kBAAhB,uBAGL,ECTYE,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAClC,OACE,iBAAKJ,UAAU,cAAf,WACE,cAAGA,UAAU,qBAAb,SAAmCG,KACnC,cAAGH,UAAU,qBAAb,SAAmCI,MAGxC,E,SCkCD,EAnCsB,WACpB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAEFc,EAAM,mCAAG,WAAOd,GAAP,0FACUD,EAAAA,EAAAA,GAAwBC,GADlC,gBACLF,EADK,EACLA,KACRY,EAAQZ,GACRc,GAAW,GAHE,2CAAH,sDAUZ,OAJAG,EAAAA,EAAAA,YAAU,WACRD,EAAOd,EACR,GAAE,CAACA,KAGF,iBAAKG,UAAU,iBAAf,WACE,SAACF,EAAD,IACEU,GAAU,SAACK,EAAA,EAAD,IAAa,KACxBP,GACG,iCACE,gBAAKQ,IAAKR,EAAKS,MAAOC,IAAKV,EAAKW,KAAMC,MAAM,QAAQlB,UAAU,2BAC9D,eAAIA,UAAU,wBAAd,SAAuCM,EAAKW,QAC5C,cAAGjB,UAAU,uBAAb,2BACA,SAACE,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKa,UACvC,SAACjB,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKc,UACvC,SAAClB,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKe,WACvC,SAACnB,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKgB,OAAOL,QAC9C,SAACf,EAAD,CAAYC,MAAM,OAAOC,MAAqB,KAAdE,EAAKiB,KAAc,UAAYjB,EAAKiB,UAEtE,OAGT,C","sources":["api/axios.js","components/BackLink/BackLink.jsx","components/InfoDetail/InfoDetail.jsx","pages/CharacterPage/CharacterPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://rickandmortyapi.com/api';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getAllCharactersAsync = async () => {\n  const data = axios.get(`/character`);\n  return data;\n};\n\nexport const getSingleCharacterAsync = async (id) => {\n  const data = axios.get(`/character/${id}`);\n  return data;\n};","import { NavLink } from \"react-router-dom\";\nimport { IoArrowBackOutline } from \"react-icons/io5\";\n\nexport const BackLink = () => {\n  return (\n    <NavLink to='/' className=\"back-link\" >\n      <IoArrowBackOutline size=\"24\"/>\n      <span className=\"back-link__text\">go back</span>\n    </NavLink>\n  );\n};","\nexport const InfoDetail = ({ title, value }) => {\n  return (\n    <div className=\"info-detail\">\n      <p className=\"info-detail__title\">{title}</p>\n      <p className=\"info-detail__value\">{value}</p>\n    </div>\n  );\n};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getSingleCharacterAsync } from \"api/axios\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { InfoDetail } from \"components/InfoDetail/InfoDetail\";\nimport { Loader } from \"components/Loader/Loader\";\n\nconst CharacterPage = () => {\n  const [item, setItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { id } = useParams();\n\n  const getOne = async (id) => {\n    const { data } = await getSingleCharacterAsync(id);\n    setItem(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getOne(id);\n  }, [id]);\n\n  return (\n    <div className=\"character-page\">\n      <BackLink />\n      { loading ? <Loader /> : null }\n      {item\n        ? <>\n            <img src={item.image} alt={item.name} width=\"100px\" className=\"character-page__image\" />\n            <h1 className=\"character-page__title\">{item.name}</h1>\n            <p className=\"character-page__text\">Informations</p>\n            <InfoDetail title=\"Gender\" value={item.gender} />\n            <InfoDetail title=\"Status\" value={item.status} />\n            <InfoDetail title=\"Specie\" value={item.species} />\n            <InfoDetail title=\"Origin\" value={item.origin.name} />\n            <InfoDetail title=\"Type\" value={item.type === '' ? 'Unknown' : item.type} />\n          </>\n        : null}\n    </div>\n  )\n};\n\nexport default CharacterPage;"],"names":["axios","getAllCharactersAsync","data","getSingleCharacterAsync","id","BackLink","to","className","size","InfoDetail","title","value","useState","item","setItem","loading","setLoading","useParams","getOne","useEffect","Loader","src","image","alt","name","width","gender","status","species","origin","type"],"sourceRoot":""}