{"version":3,"file":"static/js/473.0943cc71.chunk.js","mappings":"4KAEaA,EAAO,WAClB,OACE,gBAAKC,IAAKC,EAASC,IAAI,OAAOC,UAAU,QAE3C,C,uJCCYC,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACE,iCACE,oBACEC,KAAK,SACLC,QAAS,kBAAMF,GAAc,SAAAG,GAAS,OAAKA,CAAL,GAA7B,EACTT,UAAU,wBAHZ,UAKGK,EAAa,oBAAsB,sBACpC,0BAAOA,EAAa,QAAU,eAGhC,SAAC,KAAD,CACEK,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SArBgB,SAACC,GAEnBZ,EADEG,GACOU,EAAAA,EAAAA,IAAaD,IAEbE,EAAAA,EAAAA,IAAUF,GAEtB,EAaG,SAIG,gBAAGA,EAAH,EAAGA,OAAQG,EAAX,EAAWA,aAAX,OACC,UAAC,KAAD,CAAqBjB,UAAU,YAA/B,WACE,SAAC,KAAD,CACEkB,KAAK,QACLX,KAAK,QACLY,MAAOL,EAAOH,MACdS,SAAUH,EACVI,YAAY,QACZrB,UAAU,sBAEZ,SAAC,KAAD,CACEkB,KAAK,WACLX,KAAK,WACLY,MAAOL,EAAOF,SACdQ,SAAUH,EACVI,YAAY,WACZrB,UAAU,sBACZ,mBAAQO,KAAK,SAASP,UAAU,wBAAhC,SAAyDK,EAAa,iBAAmB,YAhBjF,WADX,KAsBH,iBAAKL,UAAU,uBAAf,WACE,gBAAKA,UAAU,+BACf,+BACA,gBAAKA,UAAU,sEAGjB,oBACEO,KAAK,SACLC,QAAS,kBAAMN,GAASoB,EAAAA,EAAAA,MAAf,EACTtB,UAAU,wBAHZ,2BAME,SAAC,MAAD,CAAUuB,KAAK,OANjB,aAWL,EC5DD,EAViB,WAEf,OACE,iBAAKvB,UAAU,YAAf,WACE,SAACJ,EAAA,EAAD,KACA,SAACK,EAAD,MAGL,C","sources":["components/Logo/Logo.jsx","components/AuthForm/AuthForm.jsx","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import logoImg from '../../images/logo.png';\n\nexport const Logo = () => {\n  return (\n    <img src={logoImg} alt=\"Logo\" className='logo' />\n  );\n};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authUser } from \"redux/auth/authOperations\";\nimport { Formik, Form, Field } from 'formik';\nimport { FcGoogle } from \"react-icons/fc\"; \nimport { registerUser, loginUser } from \"redux/auth/authOperations\";\n\nexport const AuthForm = () => {\n  const dispatch = useDispatch();\n  const [toggleForm, setToggleForm] = useState(true);\n\n  const submitHandler = (values) => {\n    if (toggleForm) {\n      dispatch(registerUser(values));\n    } else {\n      dispatch(loginUser(values));\n    }\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => setToggleForm(prevState => !prevState)}\n        className=\"auth-form__toggle-btn\"\n      >\n        {toggleForm ? 'You have account?' : 'Dont have account?'}\n        <span>{toggleForm ? 'Login' : 'Create'}</span>\n      </button>\n\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={submitHandler}\n      >\n        {({ values, handleChange }) => (\n          <Form key=\"register\" className=\"auth-form\">\n            <Field\n              name=\"email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              placeholder=\"Email\"\n              className=\"auth-form__input\"\n            />\n            <Field\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              className=\"auth-form__input\" />\n            <button type=\"submit\" className=\"auth-form__submit-btn\">{toggleForm ? 'Create account' : 'Login'}</button>\n          </Form>\n        )}\n      </Formik>\n\n      <div className=\"auth-form__delimeter\">\n        <div className=\"auth-form__delimeter-line\"></div>\n        <p>or</p>\n        <div className=\"auth-form__delimeter-line auth-form__delimeter-line--reversed\"></div>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={() => dispatch(authUser())}\n        className=\"auth-form__google-btn\"\n      >\n        Continue with \n        <FcGoogle size=\"20\" />\n        oogle\n      </button>\n    </>\n  );\n};","import { Logo } from \"components/Logo/Logo\";\nimport { AuthForm } from \"components/AuthForm/AuthForm\";\n\nconst AuthPage = () => {\n\n  return (\n    <div className=\"auth-page\">\n      <Logo />\n      <AuthForm />\n    </div>\n  );\n};\n\nexport default AuthPage;"],"names":["Logo","src","logoImg","alt","className","AuthForm","dispatch","useDispatch","useState","toggleForm","setToggleForm","type","onClick","prevState","initialValues","email","password","onSubmit","values","registerUser","loginUser","handleChange","name","value","onChange","placeholder","authUser","size"],"sourceRoot":""}