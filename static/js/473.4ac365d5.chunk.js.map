{"version":3,"file":"static/js/473.4ac365d5.chunk.js","mappings":"4KAEaA,EAAO,WAClB,OACE,gBAAKC,IAAKC,EAASC,IAAI,OAAOC,UAAU,QAE3C,C,2KCGYC,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAUA,OACE,iCACE,oBACEC,KAAK,SACLC,QAAS,kBAAMJ,GAAc,SAAAK,GAAS,OAAKA,CAAL,GAA7B,EACTX,UAAU,wBAHZ,UAKGK,EAAa,oBAAsB,sBACpC,0BAAOA,EAAa,QAAU,eAGhC,SAAC,KAAD,CACEO,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SArBgB,SAACC,GAChBA,EAAOH,MAAMI,QAAWD,EAAOF,SAASG,OAG9Bf,EAAbG,GAAsBa,EAAAA,EAAAA,IAAaF,IAAoBG,EAAAA,EAAAA,IAAUH,IAFjEI,EAAAA,GAAAA,KAAW,wBAId,EAaG,SAIG,gBAAGJ,EAAH,EAAGA,OAAQK,EAAX,EAAWA,aAAX,OACC,UAAC,KAAD,CAAqBrB,UAAU,YAA/B,WACE,gBAAKA,UAAU,qBAAf,UACE,SAAC,KAAD,CACEsB,KAAK,QACLb,KAAK,QACLc,MAAOP,EAAOH,MACdW,SAAUH,EACVI,YAAY,QACZzB,UAAU,wBAId,iBAAKA,UAAU,qBAAf,WACE,SAAC,KAAD,CACEsB,KAAK,WACLb,KAAMF,EAAe,OAAS,WAC9BgB,MAAOP,EAAOF,SACdU,SAAUH,EACVI,YAAY,WACZzB,UAAU,sBAEZ,mBAAQS,KAAK,SAASC,QAAS,kBAAMF,GAAgB,SAAAG,GAAS,OAAKA,CAAL,GAA/B,EAAgDX,UAAU,0BAAzF,SACGO,GAAe,SAAC,MAAD,CAAWmB,KAAK,QAAW,SAAC,MAAD,CAAaA,KAAK,aAIjE,mBACEjB,KAAK,SACLT,UAAU,wBAFZ,SAIGK,EAAa,iBAAmB,YA9B3B,WADX,KAqCH,iBAAKL,UAAU,uBAAf,WACE,gBAAKA,UAAU,+BACf,+BACA,gBAAKA,UAAU,sEAGjB,oBACES,KAAK,SACLC,QAAS,kBAAMR,GAASyB,EAAAA,EAAAA,MAAf,EACT3B,UAAU,wBAHZ,2BAME,SAAC,MAAD,CAAU0B,KAAK,OANjB,aAWL,EC9ED,EAViB,WAEf,OACE,iBAAK1B,UAAU,YAAf,WACE,SAACJ,EAAA,EAAD,KACA,SAACK,EAAD,MAGL,C","sources":["components/Logo/Logo.jsx","components/AuthForm/AuthForm.jsx","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import logoImg from '../../images/logo.png';\n\nexport const Logo = () => {\n  return (\n    <img src={logoImg} alt=\"Logo\" className='logo' />\n  );\n};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authUser } from \"redux/auth/authOperations\";\nimport { toast } from 'react-toastify';\nimport { Formik, Form, Field } from 'formik';\nimport { FcGoogle } from \"react-icons/fc\"; \nimport { registerUser, loginUser } from \"redux/auth/authOperations\";\nimport { RxEyeClosed, RxEyeOpen } from \"react-icons/rx\";\n\nexport const AuthForm = () => {\n  const dispatch = useDispatch();\n  const [toggleForm, setToggleForm] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const submitHandler = (values) => {\n    if (!values.email.trim() || !values.password.trim()) {\n      toast.warn('Fields cannot by emty');\n    } else {\n      toggleForm ? dispatch(registerUser(values)) : dispatch(loginUser(values))\n    }\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => setToggleForm(prevState => !prevState)}\n        className=\"auth-form__toggle-btn\"\n      >\n        {toggleForm ? 'You have account?' : 'Dont have account?'}\n        <span>{toggleForm ? 'Login' : 'Create'}</span>\n      </button>\n\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={submitHandler}\n      >\n        {({ values, handleChange }) => (\n          <Form key=\"register\" className=\"auth-form\">\n            <div className=\"auth-form__wrapper\">\n              <Field\n                name=\"email\"\n                type=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"Email\"\n                className=\"auth-form__input\"\n              />\n            </div>\n\n            <div className=\"auth-form__wrapper\">\n              <Field\n                name=\"password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n                className=\"auth-form__input\"\n              />\n              <button type=\"button\" onClick={() => setShowPassword(prevState => !prevState)} className=\"auth-form__password-btn\">\n                {showPassword ? <RxEyeOpen size=\"20\"  /> : <RxEyeClosed size=\"20\" />}\n              </button>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"auth-form__submit-btn\"\n            >\n              {toggleForm ? 'Create account' : 'Login'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n      <div className=\"auth-form__delimeter\">\n        <div className=\"auth-form__delimeter-line\"></div>\n        <p>or</p>\n        <div className=\"auth-form__delimeter-line auth-form__delimeter-line--reversed\"></div>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={() => dispatch(authUser())}\n        className=\"auth-form__google-btn\"\n      >\n        Continue with \n        <FcGoogle size=\"20\" />\n        oogle\n      </button>\n    </>\n  );\n};","import { Logo } from \"components/Logo/Logo\";\nimport { AuthForm } from \"components/AuthForm/AuthForm\";\n\nconst AuthPage = () => {\n\n  return (\n    <div className=\"auth-page\">\n      <Logo />\n      <AuthForm />\n    </div>\n  );\n};\n\nexport default AuthPage;"],"names":["Logo","src","logoImg","alt","className","AuthForm","dispatch","useDispatch","useState","toggleForm","setToggleForm","showPassword","setShowPassword","type","onClick","prevState","initialValues","email","password","onSubmit","values","trim","registerUser","loginUser","toast","handleChange","name","value","onChange","placeholder","size","authUser"],"sourceRoot":""}