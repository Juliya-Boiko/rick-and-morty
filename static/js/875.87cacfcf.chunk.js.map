{"version":3,"file":"static/js/875.87cacfcf.chunk.js","mappings":"yOAGaA,EAAW,WACtB,OACE,UAAC,KAAD,CAASC,GAAG,IAAIC,UAAU,YAA1B,WACE,SAAC,MAAD,CAAoBC,KAAK,QACzB,iBAAMD,UAAU,kBAAhB,uBAGL,E,UCRYE,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAClC,OACE,iBAAKJ,UAAU,cAAf,WACE,cAAGA,UAAU,qBAAb,SAAmCG,KACnC,cAAGH,UAAU,qBAAb,SAAmCI,MAGxC,ECNYC,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAE9B,OACE,8BACGA,GACG,iCACE,gBAAKC,IAAKD,EAAKE,MAAOC,IAAKH,EAAKI,KAAMC,MAAM,QAAQX,UAAU,2BAC9D,eAAIA,UAAU,wBAAd,SAAuCM,EAAKI,QAC5C,cAAGV,UAAU,uBAAb,2BACA,SAACE,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKM,UACvC,SAACV,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKO,UACvC,SAACX,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKQ,WACvC,SAACZ,EAAD,CAAYC,MAAM,SAASC,MAAOE,EAAKS,OAAOL,QAC9C,SAACR,EAAD,CAAYC,MAAM,OAAOC,MAAQE,EAAKU,KAAmBV,EAAKU,KAAjB,eAE/C,MAIT,ECID,EAnBsB,WACpB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOb,EAAP,KAAac,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,GAAwBP,GAAIQ,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,KAArB,IACzCL,GAAW,EACZ,GAAE,CAACL,KAGF,iBAAKjB,UAAU,iBAAf,WACE,SAACF,EAAD,IACCuB,GAAU,SAACO,EAAA,EAAD,KAAc,SAACvB,EAAD,CAAeC,KAAMA,MAGnD,C","sources":["components/BackLink/BackLink.jsx","components/CharacterInfo/CharacterDetail/CharacterDetail.jsx","components/CharacterInfo/CharacterInfo.jsx","pages/CharacterPage/CharacterPage.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport { IoArrowBackOutline } from \"react-icons/io5\";\n\nexport const BackLink = () => {\n  return (\n    <NavLink to='/' className=\"back-link\" >\n      <IoArrowBackOutline size=\"24\"/>\n      <span className=\"back-link__text\">go back</span>\n    </NavLink>\n  );\n};","import PropTypes from 'prop-types';\n\nexport const InfoDetail = ({ title, value }) => {\n  return (\n    <div className=\"info-detail\">\n      <p className=\"info-detail__title\">{title}</p>\n      <p className=\"info-detail__value\">{value}</p>\n    </div>\n  );\n};\n\nInfoDetail.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\nimport { InfoDetail } from \"components/CharacterInfo/CharacterDetail/CharacterDetail\";\n\nexport const CharacterInfo = ({ item }) => {\n\n  return (\n    <>\n      {item\n        ? <>\n            <img src={item.image} alt={item.name} width=\"100px\" className=\"character-info__image\" />\n            <h1 className=\"character-info__title\">{item.name}</h1>\n            <p className=\"character-info__text\">Informations</p>\n            <InfoDetail title=\"Gender\" value={item.gender} />\n            <InfoDetail title=\"Status\" value={item.status} />\n            <InfoDetail title=\"Specie\" value={item.species} />\n            <InfoDetail title=\"Origin\" value={item.origin.name} />\n            <InfoDetail title=\"Type\" value={!item.type ? 'Unknown' : item.type} />\n          </>\n        : null\n      }\n    </>\n  );\n};\n\nCharacterInfo.propTypes = {\n  item: PropTypes.shape({\n    created: PropTypes.string,\n    episode: PropTypes.arrayOf(PropTypes.string),\n    gender: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    location: PropTypes.shape({ name: PropTypes.string, url: PropTypes.string }),\n    name: PropTypes.string.isRequired,\n    origin: PropTypes.shape({ name: PropTypes.string, url: PropTypes.string }),\n    species: PropTypes.string.isRequired,\n    status: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n  }),\n};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getSingleCharacterAsync } from \"api/axios\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { CharacterInfo } from \"components/CharacterInfo/CharacterInfo\";\n\nconst CharacterPage = () => {\n  const { id } = useParams();\n  const [item, setItem] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getSingleCharacterAsync(id).then(response => setItem(response.data));\n    setLoading(false);\n  }, [id]);\n\n  return (\n    <div className=\"character-page\">\n      <BackLink />\n      {loading ? <Loader /> :  <CharacterInfo item={item} />}\n    </div>\n  )\n};\n\nexport default CharacterPage;"],"names":["BackLink","to","className","size","InfoDetail","title","value","CharacterInfo","item","src","image","alt","name","width","gender","status","species","origin","type","id","useParams","useState","setItem","loading","setLoading","useEffect","getSingleCharacterAsync","then","response","data","Loader"],"sourceRoot":""}