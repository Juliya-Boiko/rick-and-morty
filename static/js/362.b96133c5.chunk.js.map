{"version":3,"file":"static/js/362.b96133c5.chunk.js","mappings":"mNAIAA,EAAAA,EAAAA,SAAAA,QAFiB,kCAIV,IAAMC,EAAqB,mCAAG,2FAC7BC,EAAOF,EAAAA,EAAAA,IAAA,cADsB,kBAE5BE,GAF4B,2CAAH,qDAKrBC,EAAuB,mCAAG,WAAOC,GAAP,8EAC/BF,EAAOF,EAAAA,EAAAA,IAAA,qBAAwBI,IADA,kBAE9BF,GAF8B,2CAAH,qD,+ICTvBG,EAAO,WAClB,OACE,gBAAKC,IAAKC,EAASC,IAAI,OAAOC,UAAU,QAE3C,E,SCJYC,EAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9B,OACE,mBAAOC,QAAQ,SAASJ,UAAU,SAAlC,WACE,SAAC,MAAD,CAAiBK,KAAK,KAAKL,UAAU,kBACrC,kBAAOA,UAAU,gBAAgBL,GAAG,SAASW,KAAK,OAAOJ,MAAOA,EAAOC,SAAUA,EAAUI,YAAY,wBAG5G,E,QCPYC,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGrB,OACE,eAAIT,UAAU,OAAd,UACE,UAAC,KAAD,CAASU,GAAE,oBAAeD,EAAKd,IAAMK,UAAU,aAA/C,WACE,gBAAKH,IAAKY,EAAKE,MAAOZ,IAAKU,EAAKG,QAChC,iBAAKZ,UAAU,gBAAf,WACE,cAAGA,UAAU,aAAb,SAA2BS,EAAKG,QAChC,cAAGZ,UAAU,gBAAb,SAA8BS,EAAKI,iBAK5C,ECdYC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAG1B,OACE,eAAIf,UAAU,aAAd,SACGe,EAAMC,KAAI,SAAAP,GACT,OAAO,SAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKd,GACxB,KAGN,E,SC6BD,EAlCiB,WACf,OAA4BsB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcK,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,mCAAG,uGACU/B,EAAAA,EAAAA,KADV,gBACLC,EADK,EACLA,KACR2B,EAAS3B,EAAK+B,SACdF,GAAW,GAHE,2CAAH,qDAmBZ,OAJAG,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,KAGD,iBAAKvB,UAAU,WAAf,WACE,SAACJ,EAAD,CAAM8B,MAAM,WACZ,SAACzB,EAAD,CAAQC,MAAOgB,EAAQf,SAhBL,SAACwB,GACrBR,EAAUQ,EAAEC,OAAO1B,MACpB,IAeKmB,GAAU,SAACQ,EAAA,EAAD,IAAa,KACvBd,EAAMe,OAAS,GAAI,SAAChB,EAAD,CAAWC,MAbrBA,EAAMG,QAAO,SAAAT,GAAI,OAAIA,EAAKG,KAAKmB,cAAcC,SAASd,EAArC,MAaqC,OAGtE,C","sources":["api/axios.js","components/Logo/Logo.jsx","components/Filter/Filter.jsx","components/Card/Card.jsx","components/CardsList/CardsList.jsx","pages/Homepage/Homepage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://rickandmortyapi.com/api';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getAllCharactersAsync = async () => {\n  const data = axios.get(`/character`);\n  return data;\n};\n\nexport const getSingleCharacterAsync = async (id) => {\n  const data = axios.get(`/character/${id}`);\n  return data;\n};","import logoImg from '../../images/logo.png';\n\nexport const Logo = () => {\n  return (\n    <img src={logoImg} alt=\"Logo\" className='logo' />\n  );\n};","import { AiOutlineSearch } from \"react-icons/ai\";\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <label htmlFor=\"filter\" className=\"filter\">\n      <AiOutlineSearch size='24' className=\"filter__icon\" />\n      <input className=\"filter__input\" id=\"filter\" type='text' value={value} onChange={onChange} placeholder='Filter by name...' />\n    </label>\n  );\n}","import { NavLink } from \"react-router-dom\";\n\nexport const Card = ({ item }) => {\n  //console.log(item);\n\n  return (\n    <li className=\"card\">\n      <NavLink to={`character/${item.id}`} className='card__link'> \n        <img src={item.image} alt={item.name} />\n        <div className=\"card__overlay\">\n          <p className=\"card__name\">{item.name}</p>\n          <p className=\"card__species\">{item.species}</p>\n        </div>\n      </NavLink>\n    </li>\n  );\n};","import { Card } from \"components/Card/Card\";\n\nexport const CardsList = ({ items }) => {\n  //console.log(items);\n\n  return (\n    <ul className=\"cards-list\">\n      {items.map(item => {\n        return <Card key={item.id} item={item} />\n      })}\n    </ul>\n  );\n};","import { useState, useEffect } from \"react\";\nimport { getAllCharactersAsync } from \"api/axios\";\nimport { Logo } from \"components/Logo/Logo\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { CardsList } from \"components/CardsList/CardsList\";\nimport { Loader } from \"components/Loader/Loader\";\n\nconst HomePage = () => {\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getAll = async () => {\n    const { data } = await getAllCharactersAsync();\n    setItems(data.results);\n    setLoading(false);\n  };\n\n  const filterHandler = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const filteredItems = () => {\n    const data = items.filter(item => item.name.toLowerCase().includes(filter));\n    return data;\n  }\n\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  return (\n    <div className=\"homepage\">\n      <Logo width=\"200px\" />\n      <Filter value={filter} onChange={filterHandler} />\n      { loading ? <Loader /> : null }\n      { items.length > 0 ? <CardsList items={filteredItems(items)}/> : null }\n    </div>\n  )\n};\n\nexport default HomePage;\n"],"names":["axios","getAllCharactersAsync","data","getSingleCharacterAsync","id","Logo","src","logoImg","alt","className","Filter","value","onChange","htmlFor","size","type","placeholder","Card","item","to","image","name","species","CardsList","items","map","useState","filter","setFilter","setItems","loading","setLoading","getAll","results","useEffect","width","e","target","Loader","length","toLowerCase","includes"],"sourceRoot":""}